<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\SupplierInspection;
use App\Models\Company;
use App\Models\Supplier;
use Carbon\Carbon;

class SupplierInspectionSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // Get existing companies and suppliers
        $companies = Company::all();
        $suppliers = Supplier::all();

        if ($companies->isEmpty() || $suppliers->isEmpty()) {
            $this->command->warn('No companies or suppliers found. Please run CompanySeeder and SupplierSeeder first.');
            return;
        }

        $this->command->info('Creating supplier inspections...');

        // Create various types of supplier inspections
        $inspectionTypes = [
            [
                'status' => 'completed',
                'notes' => 'Annual GDPR compliance audit completed successfully. All data processing activities are compliant with current regulations. Supplier has implemented proper data protection measures and consent management systems.',
                'date_range' => ['-6 months', '-1 month']
            ],
            [
                'status' => 'completed',
                'notes' => 'Security assessment passed with minor recommendations. Supplier has strong encryption protocols and access controls in place. Recommended quarterly security reviews.',
                'date_range' => ['-4 months', '-2 months']
            ],
            [
                'status' => 'completed',
                'notes' => 'Data retention policy review completed. Supplier maintains appropriate data retention schedules and deletion procedures. All data subject rights are properly handled.',
                'date_range' => ['-3 months', '-1 month']
            ],
            [
                'status' => 'pending',
                'notes' => 'Scheduled for upcoming quarterly review. Focus areas: data breach response procedures, third-party data sharing agreements, and consent management updates.',
                'date_range' => ['now', '+1 month']
            ],
            [
                'status' => 'pending',
                'notes' => 'New supplier onboarding inspection required. Initial assessment needed for GDPR compliance, data processing agreements, and security protocols.',
                'date_range' => ['now', '+2 weeks']
            ],
            [
                'status' => 'failed',
                'notes' => 'Critical compliance issues identified. Supplier lacks proper data subject rights procedures and has inadequate consent management. Immediate remediation required.',
                'date_range' => ['-2 months', '-1 month']
            ],
            [
                'status' => 'completed',
                'notes' => 'Post-remediation follow-up inspection. All previously identified issues have been resolved. Supplier now meets all GDPR compliance requirements.',
                'date_range' => ['-1 month', 'now']
            ],
            [
                'status' => 'pending',
                'notes' => 'Annual comprehensive audit scheduled. Will review all aspects of data protection, including technical measures, organizational procedures, and legal compliance.',
                'date_range' => ['+1 month', '+2 months']
            ],
            [
                'status' => 'completed',
                'notes' => 'Incident response capability assessment completed. Supplier has robust breach detection and notification procedures. Response time meets regulatory requirements.',
                'date_range' => ['-5 months', '-3 months']
            ],
            [
                'status' => 'completed',
                'notes' => 'Data processing agreement review completed. All contracts updated to include latest GDPR requirements. Supplier processing activities are properly documented.',
                'date_range' => ['-2 months', '-1 month']
            ],
            [
                'status' => 'pending',
                'notes' => 'Special investigation required due to customer complaint. Need to review specific data processing activities and verify compliance with consent requirements.',
                'date_range' => ['now', '+1 week']
            ],
            [
                'status' => 'completed',
                'notes' => 'Technical security assessment passed. Supplier implements appropriate technical and organizational measures to ensure data security. Encryption and access controls are adequate.',
                'date_range' => ['-3 months', '-2 months']
            ],
            [
                'status' => 'pending',
                'notes' => 'Regular monitoring inspection. Focus on ongoing compliance with data protection policies and procedures. Review of recent changes to data processing activities.',
                'date_range' => ['+2 weeks', '+1 month']
            ],
            [
                'status' => 'failed',
                'notes' => 'Data protection impact assessment required. Supplier processing activities pose high risk to data subjects. Need to implement additional safeguards and controls.',
                'date_range' => ['-1 month', '-2 weeks']
            ],
            [
                'status' => 'completed',
                'notes' => 'Cross-border data transfer assessment completed. Supplier has appropriate safeguards for international data transfers. Standard contractual clauses are in place.',
                'date_range' => ['-4 months', '-3 months']
            ]
        ];

        foreach ($inspectionTypes as $index => $inspectionData) {
            // Create multiple inspections for each type
            for ($i = 0; $i < 3; $i++) {
                // Get a random company that has suppliers
                $company = null;
                $supplier = null;

                // Try to find a company with suppliers
                foreach ($companies as $comp) {
                    $companySuppliers = Supplier::where('company_id', $comp->id)->get();
                    if ($companySuppliers->isNotEmpty()) {
                        $company = $comp;
                        $supplier = $companySuppliers->random();
                        break;
                    }
                }

                if (!$company || !$supplier) {
                    continue; // Skip if no valid company/supplier found
                }

                $inspectionDate = Carbon::parse($inspectionData['date_range'][0]);
                if ($inspectionData['date_range'][1] !== 'now') {
                    $inspectionDate = Carbon::parse($inspectionData['date_range'][1]);
                }

                SupplierInspection::create([
                    'company_id' => $company->id,
                    'supplier_id' => $supplier->id,
                    'inspection_date' => $inspectionDate,
                    'notes' => $inspectionData['notes'],
                    'status' => $inspectionData['status'],
                ]);
            }
        }

        // Create some additional random inspections
        SupplierInspection::factory(20)->create();

        $this->command->info('Supplier inspections created successfully!');
    }
}
